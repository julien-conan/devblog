{"version":3,"sources":["../../../src/internal-plugins/webpack-theme-component-shadowing/index.js"],"names":["path","require","module","exports","GatsbyThemeComponentShadowingResolverPlugin","constructor","projectRoot","themes","apply","resolver","plugin","request","callback","matchingThemes","filter","name","includes","join","length","Error","theme","split","component","resolvedComponentPath","resolve","resolveComponentPath","directory","query","cache","dirname","map","dir","find","possibleComponentPath","e"],"mappings":"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","sourcesContent":["const path = require(`path`)\n\nmodule.exports = class GatsbyThemeComponentShadowingResolverPlugin {\n  cache = {}\n\n  constructor({ projectRoot, themes }) {\n    this.themes = themes\n    this.projectRoot = projectRoot\n  }\n\n  apply(resolver) {\n    resolver.plugin(`relative`, (request, callback) => {\n      // find out which theme's src/components dir we're requiring from\n      const matchingThemes = this.themes.filter(name =>\n        request.path.includes(path.join(name, `src`, `components`))\n      )\n      // 0 matching themes happens a lot fo rpaths we don't want to handle\n      // > 1 matching theme means we have a path like\n      //   `gatsby-theme-blog/src/components/gatsby-theme-something/src/components`\n      if (matchingThemes.length > 1) {\n        throw new Error(\n          `Gatsby can't differentiate between themes ${matchingThemes.join(\n            ` and `\n          )} for path ${request.path}`\n        )\n      }\n      if (matchingThemes.length !== 1) {\n        return callback()\n      }\n      // theme is the theme package from which we're requiring the relative component\n      const [theme] = matchingThemes\n      // get the location of the component relative to src/components\n      const [, component] = request.path.split(\n        path.join(theme, `src`, `components`)\n      )\n\n      const resolvedComponentPath = require.resolve(\n        this.resolveComponentPath({\n          theme,\n          component,\n          projectRoot: this.projectRoot,\n        })\n      )\n      // this callback ends the resolver fallthrough chain.\n      return callback(null, {\n        directory: request.directory,\n        path: resolvedComponentPath,\n        query: request.query,\n        request: ``,\n      })\n    })\n  }\n\n  // check the cache, the user's project, and finally the theme files\n  resolveComponentPath({ theme, component, projectRoot }) {\n    if (!this.cache[`${theme}-${component}`]) {\n      this.cache[`${theme}-${component}`] = [\n        path.join(projectRoot, `src`, `components`, theme),\n        path.join(path.dirname(require.resolve(theme)), `src`, `components`),\n      ]\n        .map(dir => path.join(dir, component))\n        .find(possibleComponentPath => {\n          try {\n            require.resolve(possibleComponentPath)\n            return true\n          } catch (e) {\n            return false\n          }\n        })\n    }\n\n    return this.cache[`${theme}-${component}`]\n  }\n}\n"],"file":"index.js"}